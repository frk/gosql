// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

var _FilterNestedRecords_colmap = map[string]string{
	"FOO.Bar.Baz.Val": `n."foo_bar_baz_val"`,
	"FOO.Baz.Val":     `n."foo_baz_val"`,
	"Foo.Bar.Baz.Val": `n."foo2_bar_baz_val"`,
	"Foo.Baz.Val":     `n."foo2_baz_val"`,
}

func (f *FilterNestedRecords) Init() {
	f.FilterMaker.Init(_FilterNestedRecords_colmap, "")
}

func (f *FilterNestedRecords) FOOBarBazVal(op string, val string) *FilterNestedRecords {
	f.FilterMaker.Col(`n."foo_bar_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FOOBazVal(op string, val string) *FilterNestedRecords {
	f.FilterMaker.Col(`n."foo_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FooBarBazVal(op string, val string) *FilterNestedRecords {
	f.FilterMaker.Col(`n."foo2_bar_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FooBazVal(op string, val string) *FilterNestedRecords {
	f.FilterMaker.Col(`n."foo2_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) And(nest func(*FilterNestedRecords)) *FilterNestedRecords {
	if nest == nil {
		f.FilterMaker.And(nil)
		return f
	}
	f.FilterMaker.And(func() {
		nest(f)
	})
	return f
}

func (f *FilterNestedRecords) Or(nest func(*FilterNestedRecords)) *FilterNestedRecords {
	if nest == nil {
		f.FilterMaker.Or(nil)
		return f
	}
	f.FilterMaker.Or(func() {
		nest(f)
	})
	return f
}
