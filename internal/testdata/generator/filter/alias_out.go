// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"time"
)

var _FilterBasicAliasRecords_colmap = map[string]string{
	"Id":        `u."id"`,
	"Email":     `u."email"`,
	"FullName":  `u."full_name"`,
	"CreatedAt": `u."created_at"`,
}

func (f *FilterBasicAliasRecords) Init() {
	f.FilterMaker.Init(_FilterBasicAliasRecords_colmap, "")
}

func (f *FilterBasicAliasRecords) Id(op string, val int) *FilterBasicAliasRecords {
	f.FilterMaker.Col(`u."id"`, op, val)
	return f
}

func (f *FilterBasicAliasRecords) Email(op string, val string) *FilterBasicAliasRecords {
	f.FilterMaker.Col(`u."email"`, op, val)
	return f
}

func (f *FilterBasicAliasRecords) FullName(op string, val string) *FilterBasicAliasRecords {
	f.FilterMaker.Col(`u."full_name"`, op, val)
	return f
}

func (f *FilterBasicAliasRecords) CreatedAt(op string, val time.Time) *FilterBasicAliasRecords {
	f.FilterMaker.Col(`u."created_at"`, op, val)
	return f
}

func (f *FilterBasicAliasRecords) And(nest func(*FilterBasicAliasRecords)) *FilterBasicAliasRecords {
	if nest == nil {
		f.FilterMaker.And(nil)
		return f
	}
	f.FilterMaker.And(func() {
		nest(f)
	})
	return f
}

func (f *FilterBasicAliasRecords) Or(nest func(*FilterBasicAliasRecords)) *FilterBasicAliasRecords {
	if nest == nil {
		f.FilterMaker.Or(nil)
		return f
	}
	f.FilterMaker.Or(func() {
		nest(f)
	})
	return f
}
