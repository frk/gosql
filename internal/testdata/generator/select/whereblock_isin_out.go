// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"github.com/frk/gosql"
	"github.com/frk/gosql/internal/testdata/common"
)

func (q *SelectWithWhereBlockInPredicateQuery) Exec(c gosql.Conn) error {
	var (
		nstatic = 0                // number of static parameters
		len1    = len(q.Where.IDs) // length of slice #1 to be unnested
		pos1    = nstatic          // starting position of slice #1 parameters
	)

	var queryString = `SELECT
	u."id"
	, u."email"
	, u."full_name"
	, u."created_at"
	FROM "test_user" AS u
	WHERE u."id" IN (` + gosql.InValueList(len1, pos1) + `)` // `

	params := make([]interface{}, nstatic+len1)
	for i := 0; i < len1; i++ {
		params[pos1+i] = q.Where.IDs[i]
	}

	rows, err := c.Query(queryString, params...)
	if err != nil {
		return err
	}
	defer rows.Close()

	for rows.Next() {
		v := new(common.User)
		err := rows.Scan(
			&v.Id,
			&v.Email,
			&v.FullName,
			&v.CreatedAt,
		)
		if err != nil {
			return err
		}

		q.Users = append(q.Users, v)
	}
	return rows.Err()
}
