// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"github.com/frk/gosql"
)

func (q *UpdatePKeyCompositeSliceQuery) Exec(c gosql.Conn) error {
	var queryString = `UPDATE "test_composite_pkey" AS p SET (
		"key"
		, "name"
		, "fruit"
		, "value"
	) = (
		x."key"::int4
		, x."name"::text
		, x."fruit"::text
		, x."value"::float8
	)
	FROM (VALUES` // `

	params := make([]interface{}, len(q.Data)*5)
	for i, v := range q.Data {
		pos := i * 5

		params[pos+0] = v.Key
		params[pos+1] = v.Name
		params[pos+2] = v.Fruit
		params[pos+3] = v.Value
		params[pos+4] = v.Id

		queryString += `(` + gosql.OrdinalParameters[pos+0] +
			`, ` + gosql.OrdinalParameters[pos+1] +
			`, ` + gosql.OrdinalParameters[pos+2] +
			`, ` + gosql.OrdinalParameters[pos+3] +
			`, ` + gosql.OrdinalParameters[pos+4] +
			`),`
	}

	queryString = queryString[:len(queryString)-1]
	queryString += ` ) AS x (
		"key"
		, "name"
		, "fruit"
		, "value"
		, "id"
	)
	WHERE p."id" = x."id"::int4 AND p."key" = x."key"::int4 AND p."name" = x."name"::text` // `

	_, err := c.Exec(queryString, params...)
	return err
}
