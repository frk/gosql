// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"time"

	"github.com/frk/gosql"
)

var _FilterBasicRecords_colmap = map[string]string{
	"id":        `"id"`,
	"email":     `"email"`,
	"fullName":  `"full_name"`,
	"createdAt": `"created_at"`,
}

func (f *FilterBasicRecords) UnmarshalFQL(fqlString string) error {
	return f.Filter.UnmarshalFQL(fqlString, _FilterBasicRecords_colmap, false)
}

func (f *FilterBasicRecords) UnmarshalSort(sortString string) error {
	return f.Filter.UnmarshalSort(sortString, _FilterBasicRecords_colmap, false)
}

func (f *FilterBasicRecords) TextSearch(v string) {
	// No search document specified.
}

func (f *FilterBasicRecords) Id(op string, val int) *FilterBasicRecords {
	f.Filter.Col(`"id"`, op, val)
	return f
}

func (f *FilterBasicRecords) Email(op string, val string) *FilterBasicRecords {
	f.Filter.Col(`"email"`, op, val)
	return f
}

func (f *FilterBasicRecords) FullName(op string, val string) *FilterBasicRecords {
	f.Filter.Col(`"full_name"`, op, val)
	return f
}

func (f *FilterBasicRecords) CreatedAt(op string, val time.Time) *FilterBasicRecords {
	f.Filter.Col(`"created_at"`, op, val)
	return f
}

func (f *FilterBasicRecords) AND(nest ...func(*FilterBasicRecords)) *FilterBasicRecords {
	if len(nest) == 0 {
		f.Filter.AND()
		return f
	}
	f.Filter.AND(func(_ *gosql.Filter) {
		nest[0](f)
	})
	return f
}

func (f *FilterBasicRecords) OR(nest ...func(*FilterBasicRecords)) *FilterBasicRecords {
	if len(nest) == 0 {
		f.Filter.OR()
		return f
	}
	f.Filter.OR(func(_ *gosql.Filter) {
		nest[0](f)
	})
	return f
}
