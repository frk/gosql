// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"github.com/frk/gosql"
)

var _FilterNestedRecords_colmap = map[string]string{
	"FOO.Bar.Baz.Val": `n."foo_bar_baz_val"`,
	"FOO.Baz.Val":     `n."foo_baz_val"`,
	"Foo.Bar.Baz.Val": `n."foo2_bar_baz_val"`,
	"Foo.Baz.Val":     `n."foo2_baz_val"`,
}

func (f *FilterNestedRecords) UnmarshalFQL(fqlString string) error {
	return f.Filter.UnmarshalFQL(fqlString, _FilterNestedRecords_colmap, false)
}

func (f *FilterNestedRecords) UnmarshalSort(sortString string) error {
	return f.Filter.UnmarshalSort(sortString, _FilterNestedRecords_colmap, false)
}

func (f *FilterNestedRecords) TextSearch(v string) {
	// No search document specified.
}

func (f *FilterNestedRecords) FOOBarBazVal(op string, val string) *FilterNestedRecords {
	f.Filter.Col(`n."foo_bar_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FOOBazVal(op string, val string) *FilterNestedRecords {
	f.Filter.Col(`n."foo_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FooBarBazVal(op string, val string) *FilterNestedRecords {
	f.Filter.Col(`n."foo2_bar_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) FooBazVal(op string, val string) *FilterNestedRecords {
	f.Filter.Col(`n."foo2_baz_val"`, op, val)
	return f
}

func (f *FilterNestedRecords) AND(nest ...func(*FilterNestedRecords)) *FilterNestedRecords {
	if len(nest) == 0 {
		f.Filter.AND()
		return f
	}
	f.Filter.AND(func(_ *gosql.Filter) {
		nest[0](f)
	})
	return f
}

func (f *FilterNestedRecords) OR(nest ...func(*FilterNestedRecords)) *FilterNestedRecords {
	if len(nest) == 0 {
		f.Filter.OR()
		return f
	}
	f.Filter.OR(func(_ *gosql.Filter) {
		nest[0](f)
	})
	return f
}
