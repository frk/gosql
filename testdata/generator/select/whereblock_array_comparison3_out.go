// DO NOT EDIT. This file was generated by "github.com/frk/gosql".

package testdata

import (
	"github.com/frk/gosql/testdata/common"

	"github.com/frk/gosql"
)

func (q *SelectWithWhereBlockArrayComparisonPredicate3Query) Exec(c gosql.Conn) error {
	const queryString = `SELECT
	u."id"
	, u."email"
	, u."full_name"
	, u."created_at"
	FROM "test_user" AS u
	WHERE u."id" = ANY($1::integer[])
	AND u."created_at" BETWEEN $2 AND $3
	OR (u."id" = ANY($4::integer[]) AND u."created_at" < $5)
	OR u."email" = SOME($6::text[])
	AND u."full_name" = SOME($7::text[])
	AND u."is_active" = $8` // `

	rows, err := c.Query(queryString,
		gosql.IntSliceToIntArray(q.Where.IDs),
		q.Where.CreatedAt.After,
		q.Where.CreatedAt.Before,
		gosql.IntSliceToIntArray(q.Where.Or.IDs),
		q.Where.Or.CreatedBefore,
		gosql.StringSliceToTextArray(q.Where.Emails),
		gosql.StringSliceToTextArray(q.Where.FullNames),
		q.Where.IsActive,
	)
	if err != nil {
		return err
	}
	defer rows.Close()

	for rows.Next() {
		v := new(common.User)
		err := rows.Scan(
			&v.Id,
			&v.Email,
			&v.FullName,
			&v.CreatedAt,
		)
		if err != nil {
			return err
		}

		q.Users = append(q.Users, v)
	}
	return rows.Err()
}
