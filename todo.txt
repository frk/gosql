- Vim script to execute the generator from the editor.
------------------------------------------------------------------------------
- Handling of enums: postgres enums are text based and if the Go app declares
an enum using integers rather than strings one has to map those integers onto
text to be able to read/write enum values from/to the database. If possible
it may be of great value to generate the mapping somehow.
------------------------------------------------------------------------------
- provide easy way to specify query-specific database-connection
------------------------------------------------------------------------------
- add support for specifying the schema for a query
------------------------------------------------------------------------------
- make sure that table-aliases in column-specific field tags reference actual aliases
declared by table-specific fields
------------------------------------------------------------------------------
- if the target column is NULLable and the source field is nilable then don't generate NULLIF 
------------------------------------------------------------------------------
gosql/api.go:
	- define generic Query & DB interfaces and provide implementations, including
	  a transaction specific implementation that can do SAVEPOINTs.
gosql/doc.go:
	- write proper docs
gosql/[etc/whyeven.txt]:
	- explain reasoning behind the package
gosql/filter.go:
	- clean up & add documentation
	- write tests
gosql/internal/fql:
	- review: make sure docs are up to date, includes proper tests, etc.
gosql/internal/sqlang:
	- clean up & add documentation
	- write tests
